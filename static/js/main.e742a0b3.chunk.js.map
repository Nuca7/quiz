{"version":3,"sources":["api/index.js","Context.js","components/Form.js","components/Question.js","helperFunctions.js","components/Modal.js","components/Questions.js","App.js","index.js"],"names":["baseUrl","getSessionToken","a","sessionTokenRequestUrl","fetch","response","json","token","getCategories","trivia_categories","getCategoryID","category","id","filter","trivia_category","name","getQuestions","amount","difficulty","sessionToken","queryParameter","data","MyContext","React","createContext","ContextProvider","children","useState","categories","setCategories","filledForm","setFilledForm","categoriesObj","CategoriesNames","map","useEffect","setData","Provider","value","handleFormChange","e","preventDefault","target","useGlobalContext","useContext","Form","navigate","useNavigate","onSubmit","className","htmlFor","type","onChange","index","difficultyLevel","Question","question","correct_answer","incorrect_answers","checkAnswer","answers","setAnswers","active","setActive","originalArray","array","slice","i","length","j","Math","floor","random","temp","shuffle","decode","answer","onClick","disabled","Modal","questionsNumber","playerPoints","Questions","questions","setQuestions","currentIndex","setCurrentIndex","setPlayerPoints","showModal","setShowModal","categoryID","categoryURL","difficultyURL","results","fetchData","increaseIndex","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e742a0b3.chunk.js","sourcesContent":["const baseUrl = \"https://opentdb.com\";\r\n\r\nexport async function getSessionToken() {\r\n  const sessionTokenRequestUrl = `${baseUrl}/api_token.php?command=request`;\r\n  const response = await fetch(sessionTokenRequestUrl);\r\n  const { token } = await response.json();\r\n  return token;\r\n}\r\n\r\nexport async function getCategories() {\r\n  const response = await fetch(`${baseUrl}/api_category.php`);\r\n  const { trivia_categories } = await response.json();\r\n  return trivia_categories;\r\n}\r\n\r\nexport async function getCategoryID(category) {\r\n  const trivia_categories = await getCategories();\r\n  const { id } = trivia_categories.filter(\r\n    (trivia_category) => trivia_category.name === category\r\n  )[0];\r\n  return id;\r\n}\r\n\r\nexport async function getQuestions(\r\n  amount,\r\n  category = \"\",\r\n  difficulty = \"\",\r\n  sessionToken\r\n) {\r\n  if (!sessionToken) return;\r\n  const queryParameter = `amount=${amount}${category}${difficulty}&token=${sessionToken}`;\r\n  const response = await fetch(`${baseUrl}/api.php?${queryParameter}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { getCategories } from \"./api\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nfunction ContextProvider({ children }) {\r\n  const [categories, setCategories] = useState([\"Any Category\"]);\r\n  const difficulty = [\"Any Difficulty\", \"easy\", \"medium\", \"hard\"];\r\n  const [filledForm, setFilledForm] = useState({\r\n    amount: 10,\r\n    category: categories[0],\r\n    difficulty: difficulty[0],\r\n  });\r\n\r\n  async function setData() {\r\n    const categoriesObj = await getCategories();\r\n    const CategoriesNames = categoriesObj.map((category) => category.name);\r\n    setCategories([...categories, ...CategoriesNames]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setData();\r\n  }, []);\r\n\r\n  function handleFormChange(e) {\r\n    e.preventDefault();\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setFilledForm({\r\n      ...filledForm,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <MyContext.Provider\r\n      value={{\r\n        categories,\r\n        difficulty,\r\n        filledForm,\r\n        handleFormChange,\r\n      }}\r\n    >\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useGlobalContext() {\r\n  return useContext(MyContext);\r\n}\r\n\r\nexport { ContextProvider, useGlobalContext };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../Context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./Form.css\";\r\n\r\nfunction Form() {\r\n  let navigate = useNavigate();\r\n\r\n  const { categories, difficulty, filledForm, handleFormChange } =\r\n    useGlobalContext();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    navigate(\"/quiz/questions\");\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <form onSubmit={handleSubmit} className=\"quiz-form\">\r\n        <h2>Quiz</h2>\r\n        {/* number of questions */}\r\n        <div>\r\n          <label htmlFor=\"questionsAmount\">Number Of Questions</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            id=\"questionsAmount\"\r\n            value={filledForm.amount}\r\n            onChange={(e) => handleFormChange(e)}\r\n          />\r\n        </div>\r\n        {/* category */}\r\n        <div>\r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            name=\"category\"\r\n            id=\"category\"\r\n            value={filledForm.category}\r\n            onChange={(e) => handleFormChange(e)}\r\n          >\r\n            {categories.map((category, index) => {\r\n              return (\r\n                <option key={index} value={category}>\r\n                  {category}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        {/* difficulty */}\r\n        <div>\r\n          <label htmlFor=\"difficultyLevel\">Difficulty</label>\r\n          <select\r\n            name=\"difficulty\"\r\n            id=\"difficultyLevel\"\r\n            value={filledForm.difficulty}\r\n            onChange={(e) => handleFormChange(e)}\r\n          >\r\n            {difficulty.map((difficultyLevel, index) => {\r\n              return (\r\n                <option key={index} value={difficultyLevel}>\r\n                  {difficultyLevel}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <button className=\"submitBtn\" type=\"submit\">\r\n          submit\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { decode } from \"html-entities\";\r\nimport { shuffle } from \"../helperFunctions\";\r\n\r\nimport \"./Question.css\";\r\n\r\nfunction Question({\r\n  question,\r\n  correct_answer,\r\n  incorrect_answers,\r\n  checkAnswer,\r\n}) {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [active, setActive] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    setAnswers(shuffle([correct_answer, ...incorrect_answers]));\r\n  }, [question]);\r\n\r\n  function handleSubmit() {\r\n    checkAnswer(answers[active], correct_answer);\r\n    setActive(-1);\r\n  }\r\n\r\n  if (!question) {\r\n    return <h2>loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <article className=\"questionContainer\">\r\n      <h2 className=\"question\">{decode(question)}</h2>\r\n      {answers.map((answer, index) => {\r\n        return (\r\n          <p\r\n            className={`answers ${index === active && \"active\"}`}\r\n            key={index}\r\n            onClick={() => setActive(index)}\r\n          >\r\n            {decode(answer)}\r\n          </p>\r\n        );\r\n      })}\r\n      <button\r\n        className=\"next-button\"\r\n        disabled={active === -1}\r\n        onClick={handleSubmit}\r\n      >\r\n        Next Question\r\n      </button>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","export function shuffle(originalArray) {\r\n  // Fisher–Yates shuffle\r\n  let array = originalArray.slice();\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temp = array[j];\r\n    array[j] = array[i];\r\n    array[i] = temp;\r\n  }\r\n  return array;\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ questionsNumber, playerPoints }) {\r\n  let navigate = useNavigate();\r\n\r\n  function playAgain() {\r\n    navigate(\"/quiz\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <h2>Finished</h2>\r\n        <p>\r\n          You answered {playerPoints} out of {questionsNumber}\r\n        </p>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Question from \"./Question\";\r\nimport Modal from \"./Modal\";\r\nimport { getSessionToken, getCategoryID, getQuestions } from \"../api\";\r\nimport { useGlobalContext } from \"../Context\";\r\n\r\nimport \"./Questions.css\";\r\n\r\nfunction Questions() {\r\n  const { filledForm } = useGlobalContext();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [playerPoints, setPlayerPoints] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  async function fetchData() {\r\n    const { amount, category, difficulty } = filledForm;\r\n    const sessionToken = await getSessionToken();\r\n    let categoryURL, difficultyURL;\r\n\r\n    if (category !== \"Any Category\") {\r\n      const categoryID = await getCategoryID(category);\r\n      categoryURL = `&category=${categoryID}`;\r\n    }\r\n\r\n    if (difficulty !== \"Any Difficulty\") {\r\n      difficultyURL = `&difficulty=${difficulty}`;\r\n    }\r\n\r\n    const { results } = await getQuestions(\r\n      amount,\r\n      categoryURL,\r\n      difficultyURL,\r\n      sessionToken\r\n    );\r\n    setQuestions(results);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function checkAnswer(answer, correct_answer) {\r\n    if (correct_answer === answer) {\r\n      setPlayerPoints(playerPoints + 1);\r\n    }\r\n    increaseIndex(currentIndex);\r\n  }\r\n\r\n  function increaseIndex(currentIndex) {\r\n    if (currentIndex >= questions.length - 1) {\r\n      setShowModal(true);\r\n    } else {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"questionsContainer\">\r\n      <p>{`${playerPoints} / ${questions.length}`}</p>\r\n      <Question checkAnswer={checkAnswer} {...questions[currentIndex]} />\r\n      {showModal && (\r\n        <Modal questionsNumber={questions.length} playerPoints={playerPoints} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Form from \"./components/Form\";\r\nimport Questions from \"./components/Questions\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/quiz\" element={<Form />} />\r\n        <Route path=\"/quiz/questions\" element={<Questions />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}